document.addEventListener("DOMContentLoaded", function () {
    fetch("/api/getTrainings", {
        method: "GET",
        headers: {
            Authorization: `Bearer ${localStorage.getItem("token")}`,
        },
    })
    .then((response) => response.json())
    .then((data) => {
        const trainingList = document.getElementById("training-list");
        trainingList.innerHTML = "";

        data.forEach((training) => {
            const trainingItem = document.createElement("div");
            trainingItem.classList.add("training-item");

            trainingItem.innerHTML = `
                <h3>${new Date(training.date).toLocaleDateString()} - ${training.type}</h3>
                <p><strong>Dur√©e :</strong> ${training.duration} min</p>
                <p><strong>√âchauffement :</strong> ${training.echauffement || "Non pr√©cis√©"}</p>
                <p><strong>Intensit√© :</strong> ${training.intensity}</p>
                <p><strong>Objectif :</strong> ${training.objectif_type || "Aucun"}</p>
                <p><strong>D√©tails :</strong> ${training.details || "Aucun d√©tail"}</p>
                <p><strong>Fr√©quence cardiaque cible :</strong> ${training.fc_cible || "Non pr√©cis√©e"}</p>
                <p><strong>Zone de fr√©quence cardiaque :</strong> ${training.zone_fc || "Non sp√©cifi√©e"}</p>
                <p><strong>R√©cup√©ration :</strong> ${training.recovery || "Non pr√©cis√©"}</p>
                <p><strong>Charge d'entra√Ænement estim√©e :</strong> ${training.planifie_par_ai ? "G√©n√©r√© par IA" : "Manuel"}</p>
                <p><strong>D√©nivel√© :</strong> ${training.total_elevation_gain ? training.total_elevation_gain + " m" : "Non disponible"}</p>
                <p><strong>Calories br√ªl√©es :</strong> ${training.calories || "Non disponible"}</p>
                <p><strong>Vitesse moyenne :</strong> ${training.average_speed ? training.average_speed.toFixed(2) + " km/h" : "Non disponible"}</p>

                <h4>üéØ Objectif li√©</h4>
                <p><strong>Type :</strong> ${training.objectif_type || "Non sp√©cifi√©"}</p>
                <p><strong>D√©nivel√© total :</strong> ${training.denivele_total ? training.denivele_total + " m" : "Non sp√©cifi√©"}</p>
                <p><strong>Allures de r√©f√©rence :</strong> ${training.allures_reference || "Non sp√©cifi√©"}</p>
                <p><strong>VMA estim√©e :</strong> ${training.vma_estimee || "Non sp√©cifi√©e"}</p>
                <p><strong>FC Max estim√©e :</strong> ${training.fc_max_estimee || "Non sp√©cifi√©e"}</p>
                <p><strong>Contraintes :</strong> ${training.contraintes || "Aucune"}</p>
                <p><strong>Nutrition recommand√©e :</strong> ${training.nutrition || "Non sp√©cifi√©e"}</p>
                <p><strong>Terrain recommand√© :</strong> ${training.terrain || "Non sp√©cifi√©"}</p>
                <p><strong>Intensit√© :</strong> ${training.intensite || "Non sp√©cifi√©e"}</p>
                <p><strong>Blessures √† surveiller :</strong> ${training.blessures || "Aucune"}</p>
            `;

            trainingList.appendChild(trainingItem);
        });
    })
    .catch((error) => console.error("Erreur lors de la r√©cup√©ration des entra√Ænements :", error));
});
