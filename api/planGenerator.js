const db = require("./db");

async function generateTrainingPlan(userId) {
    console.log(`üìå D√©but de la g√©n√©ration du plan pour l'utilisateur ${userId}`);

    const user = await db.query("SELECT * FROM users WHERE id = $1", [userId]);
    if (!user.rows.length) {
        console.error("‚ùå Utilisateur introuvable !");
        throw new Error("Utilisateur introuvable");
    }

    console.log(`‚úÖ Pr√©f√©rences utilisateur r√©cup√©r√©es :`, user.rows[0]);

    const activities = await db.query(
        "SELECT * FROM strava_activities WHERE user_id = $1 ORDER BY date DESC LIMIT 60", 
        [userId]
    );

    console.log(`üìå Nombre d'activit√©s Strava r√©cup√©r√©es : ${activities.rows.length}`);
    if (activities.rows.length === 0) {
        console.warn("‚ö†Ô∏è Aucune activit√© Strava trouv√©e, le plan pourrait √™tre limit√©.");
    }

    const trainingPlan = [];
    const fc_moyenne = 150; // Exemple - On pourrait calculer cela √† partir des donn√©es Strava

    for (let i = 0; i < 4; i++) {
        trainingPlan.push({
            user_id: userId,
            date: new Date(new Date().setDate(new Date().getDate() + i * 7)), // S√©ances hebdomadaires
            type: "Entra√Ænement",
            duration: 60,
            intensity: "Mod√©r√©",
            echauffement: "15 min √©chauffement l√©ger",
            recuperation: "10 min r√©cup√©ration √† faible intensit√©",
            fc_cible: `${fc_moyenne - 10} - ${fc_moyenne + 10} BPM`,
            zone_fc: "Zone 3 - Endurance",
            details: "S√©ance automatique",
            is_generated: true
        });
    }

    console.log(`üìå Suppression des anciens entra√Ænements g√©n√©r√©s`);
    await db.query("DELETE FROM trainings WHERE user_id = $1 AND is_generated = TRUE", [userId]);

    console.log(`üìå Insertion des nouveaux entra√Ænements`);
    for (const session of trainingPlan) {
        await db.query(
            `INSERT INTO trainings 
            (user_id, date, type, duration, intensity, echauffement, recuperation, fc_cible, zone_fc, details, is_generated) 
            VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)`, 
            [
                session.user_id, session.date, session.type, session.duration, 
                session.intensity, session.echauffement, session.recuperation,
                session.fc_cible, session.zone_fc, session.details, session.is_generated
            ]
        );
    }

    console.log("‚úÖ Plan ins√©r√© avec succ√®s !");
    return trainingPlan;
}

module.exports = generateTrainingPlan;
